openapi: 3.0.2
info:
  title: Film API
  version: "1.0"
servers:
  - url: http://localhost:3001
paths:
  /user/login:
    post:
      tags:
        - user
        - noAuth
      description: User login
      operationId: userLogin
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        "200":
          description: login successful
          headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "400":
          description: Invalid username/password
      security: []
      x-swagger-router-controller: User
  /film:
    post:
      tags:
        - film
      description: Create a new film
      operationId: createFilm
      requestBody:
        content:
          application/json:
            schema:
              $ref: "../JSON Schemas/film.json"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "../JSON Schemas/film.json"
        "400":
          description: Invalid input
        "422":
          description: Validation exception
      security:
        - cookieAuth: []
      x-swagger-router-controller: Film
  /film/{filmId}:
    get:
      tags:
        - film
      description: Returns a film by Id
      operationId: getFilm
      parameters:
        - name: filmId
          in: path
          description: ID of film to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "../JSON Schemas/film.json"
        "400":
          description: Invalid ID
        "401":
          description: Unauthorized - you are not the owner or the film is not public
        "404":
          description: Film not found
      security:
        - cookieAuth: []
      x-swagger-router-controller: Film
    put:
      tags:
        - film
      description: Update a film by Id
      operationId: updateFilm
      parameters:
        - name: filmId
          in: path
          description: ID of film to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existing film
        content:
          application/json:
            schema:
              $ref: "../JSON Schemas/film.json"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "../JSON Schemas/film.json"
        "400":
          description: Invalid ID
        "401":
          description: Unauthorized - you are not the owner
        "404":
          description: Film not found
        "422":
          description: Validation exception
      security:
        - cookieAuth: []
      x-swagger-router-controller: Film
    delete:
      tags:
        - film
      description: Deletes a film by Id
      operationId: deleteFilm
      parameters:
        - name: filmId
          in: path
          description: Film id to delete
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid Id
        "401":
          description: Unauthorized - you are not the owner
        "404":
          description: Film not found
      security:
        - cookieAuth: []
      x-swagger-router-controller: Film
  /films/public:
    get:
      tags:
        - film
        - noAuth
      description: Returns the list of public films
      operationId: getPublicFilms
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                maxItems: 10
                type: array
                items:
                  $ref: "../JSON Schemas/film.json"
                x-content-type: application/json
        "404":
          description: No films found
      security: []
      x-swagger-router-controller: Film
  /films/public/{filmId}:
    get:
      tags:
        - film
        - noAuth
      description: Returns a film by Id
      operationId: getPublicFilm
      parameters:
        - name: filmId
          in: path
          description: ID of film to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "../JSON Schemas/film.json"
        "400":
          description: Invalid ID
        "401":
          description: Unauthorized - the film is not public
        "404":
          description: Film not found
      security: []
      x-swagger-router-controller: Film
  /films/owned:
    get:
      tags:
        - film
      description: Returns the list of films owned by the user
      operationId: getFilmsByOwner
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                maxItems: 10
                type: array
                items:
                  $ref: "../JSON Schemas/film.json"
                x-content-type: application/json
        "401":
          description: Unauthorized
        "404":
          description: No films found
      security:
        - cookieAuth: []
      x-swagger-router-controller: Film
  /films/toReview:
    get:
      tags:
        - film
      description: Returns the list of films the user has been invited to review
      operationId: getFilmToReview
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                maxItems: 10
                type: array
                items:
                  $ref: "../JSON Schemas/film.json"
                x-content-type: application/json
        "401":
          description: Unauthorized
        "404":
          description: No films found
      security:
        - cookieAuth: []
      x-swagger-router-controller: Film
  /review:
    post:
      tags:
        - review
      description: Issue a new review to a list of users
      operationId: issueReview
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                review:
                  $ref: "../JSON Schemas/review.json"
                users:
                  type: array
                  items:
                    type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "../JSON Schemas/review.json"
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "422":
          description: Validation exception
      security:
        - cookieAuth: []
      x-swagger-router-controller: Review
  /automatic/review/{filmId}:
    post:
      tags:
        - review
      description: Automatically issue reviews for a film with no invitation in a way that the invitations to the users are balanced
      operationId: issueAutomaticallyReview
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "422":
          description: Validation exception
      security:
        - cookieAuth: []
      x-swagger-router-controller: Review
  /review/{filmId}/{reviewerId}:
    put:
      tags:
        - review
      description: Update a review by film Id and reviewerId
      operationId: updateReview
      parameters:
        - name: filmId
          in: path
          description: ID of film
          required: true
          schema:
            type: integer
            format: int64
        - name: reviewerId
          in: path
          description: ID of reviewer
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existing review
        content:
          application/json:
            schema:
              $ref: "../JSON Schemas/review.json"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "../JSON Schemas/review.json"
        "400":
          description: Invalid ID
        "401":
          description: Unauthorized
        "404":
          description: Review not found
        "422":
          description: Validation exception
      security:
        - cookieAuth: []
      x-swagger-router-controller: Review
    delete:
      tags:
        - review
      description: Deletes a review by Id
      operationId: deleteReview
      parameters:
        - name: reviewId
          in: path
          description: Review Id to delete
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid Id
        "401":
          description: Unauthorized
      security:
        - cookieAuth: []
      x-swagger-router-controller: Review
  /reviews/public/{filmId}:
    get:
      tags:
        - review
        - noAuth
      description: Returns all reviews of a public film
      operationId: getReviewsByPublicFilmId
      parameters:
        - name: filmId
          in: path
          description: ID of film
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                maxItems: 10
                type: array
                items:
                  $ref: "../JSON Schemas/review.json"
                x-content-type: application/json
        "400":
          description: Invalid ID
        "401":
          description: Unauthorized - the film is not public
        "404":
          description: Film not found
      security: []
      x-swagger-router-controller: Review
  /reviews/public/{filmId}/{reviewId}:
    get:
      tags:
        - review
        - noAuth
      description: Returns one review of a public film
      operationId: getReviewByPublicFilmId
      parameters:
        - name: filmId
          in: path
          description: ID of film
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: reviewId
          in: path
          description: ID of review
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                maxItems: 10
                type: array
                items:
                  $ref: "../JSON Schemas/review.json"
                x-content-type: application/json
        "400":
          description: Invalid ID
        "401":
          description: Unauthorized - the film is not public
        "404":
          description: Film not found or review not found
      security: []
      x-swagger-router-controller: Review
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      name: sessionCookie
      in: cookie
