openapi: 3.0.2
info:
  title: Film API
  version: "1.0"
servers:
  - url: http://localhost:8080
paths:
  /user/login:
    post:
      tags:
        - user
        - noAuth
      description: User login
      operationId: userLogin
      requestBody:
        content:
          application/json:
            schema:
              properties:
                username:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
            examples:
              login1:
                $ref: "#/components/examples/login1"
      responses:
        "200":
          description: login successful
          headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "400":
          description: Invalid username/password
      security: []
      x-swagger-router-controller: User
  /films:
    get:
      tags:
        - film
      description:
        Returns a page of 10 films, filtered depending on the query parameters.
        Only one parameter between 'owned' and 'toReview' is allowed to be set to 1
      operationId: getFilms
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          explode: false
          schema:
            type: integer
            format: int64
        - name: owned
          in: query
          description: If set to 1 retrieves a page of films owned by the logged user.
          required: false
          explode: false
          schema:
            type: integer
            format: int64
        - name: toReview
          in: query
          description: If set to 1 retrieves a page of films issued to be reviewed by the logged user.
          required: false
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                maxItems: 10
                type: array
                items:
                  $ref: "/JSONSchemas/film.json"
                x-content-type: application/json
        "404":
          description: No films found
      security: []
      x-swagger-router-controller: Film
    post:
      tags:
        - film
      description: Create a new film
      operationId: createFilm
      requestBody:
        content:
          application/json:
            schema:
              $ref: "/JSONSchemas/film.json"
            examples:
              publicFilmExample:
                $ref: "#/components/examples/publicFilmReq"
              privateFilmExample:
                $ref: "#/components/examples/privateFilmReq"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "/JSONSchemas/film.json"
        "400":
          description: Invalid input
        "422":
          description: Validation exception
      security:
        - cookieAuth: []
      x-swagger-router-controller: Film
  /films/{filmId}:
    get:
      tags:
        - film
      description: Returns a film by Id if it is public or if it is owned by the logged user.
      operationId: getFilm
      parameters:
        - name: filmId
          in: path
          description: ID of film to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "/JSONSchemas/film.json"
        "400":
          description: Invalid ID
        "401":
          description: Unauthorized - you are not the owner or the film is not public
        "404":
          description: Film not found
      security:
        - cookieAuth: []
      x-swagger-router-controller: Film
    put:
      tags:
        - film
      description: Update a film by Id
      operationId: updateFilm
      parameters:
        - name: filmId
          in: path
          description: ID of film to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existing film
        content:
          application/json:
            schema:
              $ref: "/JSONSchemas/film.json"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "/JSONSchemas/film.json"
        "400":
          description: Invalid ID
        "401":
          description: Unauthorized - you are not the owner
        "404":
          description: Film not found
        "422":
          description: Validation exception
      security:
        - cookieAuth: []
      x-swagger-router-controller: Film
    delete:
      tags:
        - film
      description: Deletes a film by Id
      operationId: deleteFilm
      parameters:
        - name: filmId
          in: path
          description: Film id to delete
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid Id
        "401":
          description: Unauthorized - you are not the owner
        "404":
          description: Film not found
      security:
        - cookieAuth: []
      x-swagger-router-controller: Film
  /films/{filmId}/reviews:
    get:
      tags:
        - review
        - noAuth
      description: Returns all reviews of a public film
      operationId: getReviewsByPublicFilmId
      parameters:
        - name: filmId
          in: path
          description: ID of film
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                maxItems: 10
                type: array
                items:
                  $ref: "/JSONSchemas/review.json"
                x-content-type: application/json
        "400":
          description: Invalid ID
        "401":
          description: Unauthorized - the film is not public
        "404":
          description: Film not found
      security: []
      x-swagger-router-controller: Review
    post:
      tags:
        - review
      description: Issue a new review to a list of users
      operationId: issueReview
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                review:
                  $ref: "/JSONSchemas/review.json"
                users:
                  type: array
                  items:
                    type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "/JSONSchemas/review.json"
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "422":
          description: Validation exception
      security:
        - cookieAuth: []
      x-swagger-router-controller: Review
  /films/{filmId}/reviews/{reviewerId}:
    get:
      tags:
        - review
        - noAuth
      description: Returns one review of a public film
      operationId: getReviewOfFilm
      parameters:
        - name: filmId
          in: path
          description: ID of film
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: reviewId
          in: path
          description: ID of review
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                maxItems: 10
                type: array
                items:
                  $ref: "/JSONSchemas/review.json"
                x-content-type: application/json
        "400":
          description: Invalid ID
        "401":
          description: Unauthorized - the film is not public
        "404":
          description: Film not found or review not found
      security: []
      x-swagger-router-controller: Review
    put:
      tags:
        - review
      description: Update a review by film Id and reviewerId
      operationId: updateReview
      parameters:
        - name: filmId
          in: path
          description: ID of film
          required: true
          schema:
            type: integer
            format: int64
        - name: reviewerId
          in: path
          description: ID of reviewer
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existing review
        content:
          application/json:
            schema:
              $ref: "/JSONSchemas/review.json"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "/JSONSchemas/review.json"
        "400":
          description: Invalid ID
        "401":
          description: Unauthorized
        "404":
          description: Review not found
        "422":
          description: Validation exception
      security:
        - cookieAuth: []
      x-swagger-router-controller: Review
    delete:
      tags:
        - review
      description: Deletes a review by Id
      operationId: deleteReview
      parameters:
        - name: reviewId
          in: path
          description: Review Id to delete
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid Id
        "401":
          description: Unauthorized
      security:
        - cookieAuth: []
      x-swagger-router-controller: Review
  /films/{filmId}/autoReviews:
    post:
      tags:
        - review
      description: Automatically issue reviews for a film with no invitation in a way that the invitations to the users are balanced
      operationId: issueAutomaticallyReview
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "422":
          description: Validation exception
      security:
        - cookieAuth: []
      x-swagger-router-controller: Review
  /like/{filmId}:
    get:
      tags:
        - like
        - noAuth
      description: Returns the total number of likes of a public film and the list of users who like it
      operationId: getFilmLikes
      parameters:
        - name: filmId
          in: path
          description: ID of film
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  likes:
                    type: integer
                    description: total count of likes
                  users:
                    maxItems: 10
                    type: array
                    items:
                      $ref: "/JSONSchemas/user.json"
              x-content-type: application/json
        "400":
          description: Invalid ID
          content:
            application/json: {}

        "404":
          description: No like found associated to the film id.
        "500":
          description: Internal server error.
      security: []
      x-swagger-router-controller: Review
    delete:
      tags:
        - like
      description: Deletes a like
      operationId: deletLike
      parameters:
        - name: filmId
          in: path
          description: Film Id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid Id
        "401":
          description: Unauthorized
        "404":
          description: Film not found
      security:
        - cookieAuth: []
      x-swagger-router-controller: Review
    post:
      tags:
        - like
      description: like a film
      operationId: likeFilm
      parameters:
        - name: filmId
          in: path
          description: Film Id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
      security:
        - cookieAuth: []
      x-swagger-router-controller: Review

#####
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      name: sessionCookie
      in: cookie

  ###
  examples:
    privateFilmReq:
      value:
        title: Inception
        private: true
        watchDate: "2023-06-13"
        rating: 9
        favorite: true
    publicFilmReq:
      value:
        title: The Matrix
        private: false
    privateFilmRes:
      value:
        id: 8
        title: Inception
        owner: 1
        private: true
        watchDate: "2023-06-13"
        rating: 9
        favorite: true
    publicFilmRes:
      value:
        id: 9
        title: The Matrix
        owner: 1
        private: false
    review1:
      value:
        filmId: 1
        reviewerId: 2
        completed: true
        reviewDate: "2024-06-13"
        rating: 8
        review: A fascinating and thought-provoking film with stunning visuals and an intricate plot.
    review2:
      value:
        filmId: 2
        reviewerId: 1002
        completed: false
    user1:
      value:
        id: 1
        name: John
        email: john.doe@polito.it
        password: password
    login1:
      value:
        username: john.doe@polito.it
        password: password
    user2:
      value:
        id: 2,
        email: mario.rossi@polito.it
